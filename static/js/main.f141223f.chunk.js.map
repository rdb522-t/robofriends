{"version":3,"sources":["serviceWorker.js","components/CounterButton.js","components/Header.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","CounterButton","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateCount","setState","count","react_default","a","createElement","color","props","onClick","PureComponent","Header","nextProps","nextState","className","components_CounterButton","Component","Card","_ref","name","email","id","src","concat","alt","CardList","robots","map","robot","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","scroll","style","overflowY","border","height","children","ErrorBoundary","hasError","info","App","onRequestRobots","_this$props","searchField","onSearchChange","isPending","filteredRobots","filter","toLowerCase","includes","components_Header","components_SearchBox","Scroll","components_ErrorBoundary","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","response","json","data","initialStateSearch","initialStateRobots","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f141223f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {PureComponent} from 'react';\r\n\r\nclass CounterButton extends PureComponent {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tcount: 0\r\n\t\t}\r\n\t}\r\n\tupdateCount = () => {\r\n\t\tthis.setState(state => {\r\n\t\t\treturn {count: state.count + 1}\r\n\t\t})\r\n\t}\r\n\t// shouldComponentUpdate(nextProps, nextState){\r\n\t// \tif (this.state.count !== nextState.count){\r\n\t// \t\treturn true;\r\n\t// \t}\r\n\t// \treturn false;\r\n\t// }\r\n\trender(){\r\n\t\tconsole.log('CounterButton');\r\n\t\treturn (\r\n\t\t\t<button color={this.props.color} onClick={this.updateCount}>Count: {this.state.count}</button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CounterButton;","import React, {Component} from 'react';\r\n\r\nimport CounterButton from './CounterButton';\r\n\r\nclass Header extends Component {\r\n\tshouldComponentUpdate(nextProps, nextState){\r\n\t\treturn false;\r\n\t}\r\n\trender(){\r\n\t\tconsole.log('header');\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className='f2'>Robofriends</h1>\r\n\t\t\t\t<CounterButton color={'red'} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn (\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img src={`https://robohash.org/${id}?200x200`} alt=\"robots\"/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots}) => {\r\n\tconsole.log('cardlist');\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{robots.map((robot, i) => {\r\n\t\t\t\treturn <Card key={i} id={robot.id} name={robot.name} email={robot.email}/>\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\tconsole.log('searchbox');\r\n\treturn (\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<input\r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='Search Robots'\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t></input>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({hasError: true})\r\n\t}\r\n\r\n\trender(){\r\n\t\tif (this.state.hasError){\r\n\t\t\treturn <h1>Oops.  That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../components/Header';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\nimport {setSearchField, requestRobots} from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tsearchField: state.searchRobots.searchField,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\tisPending: state.requestRobots.isPending,\r\n\t\terror: state.requestRobots.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonSearchChange: event => dispatch(setSearchField(event.target.value)),\r\n\t\tonRequestRobots: () => dispatch(requestRobots())\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.props.onRequestRobots();\r\n\t}\r\n\trender() {\r\n\t\tconst {searchField, onSearchChange, robots, isPending} = this.props;\r\n\t\tconst filteredRobots = robots.filter((robot) => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n\t\t})\r\n\t\treturn isPending\r\n\t\t\t? <h1>Loading</h1>\r\n\t\t\t: (\r\n\t\t\t\t<div className=\"tc\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<SearchBox searchChange={onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App) ;","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constants';\r\n\r\nexport const setSearchField = (text) => {\r\n\treturn {\r\n\t\ttype: CHANGE_SEARCH_FIELD,\r\n\t\tpayload: text\r\n\t}\r\n}\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: data}))\r\n\t\t\t.catch(error => dispatch({type: REQUEST_ROBOTS_FAILED, payload: error}))\r\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constants';\r\n\r\nconst initialStateSearch = {\r\n\tsearchField: ''\r\n}\r\n\r\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\r\n\tswitch(action.type){\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\treturn Object.assign({}, state, {searchField: action.payload});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst initialStateRobots = {\r\n\tisPending: false,\r\n\trobots: [],\r\n\terror: ''\r\n}\r\n\r\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\r\n\tswitch(action.type){\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\t\treturn Object.assign({}, state, {isPending: true});\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, {robots: action.payload, isPending: false});\r\n\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\t\treturn Object.assign({}, state, {error: action.payload, isPending: false});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n} ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\n// import {createLogger} from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './containers/App';\nimport {searchRobots, requestRobots} from './reducers';\n\n// const logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots});\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}